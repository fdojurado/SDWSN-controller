# Main SDWSN Controller workflow
name: CI
run-name: ${{ github.actor }} is doing CI

# Run the workflow on:
#   * Any PR against master, develop or candidate release branch
#   * Any push (or merge) on master and develop
on:
  push:
    branches: [master, develop, fix-flake8-error]
  pull_request:
    branches: [master, develop, release-*]

# We use a single job with a matrix with elements corresponding to our tests
# The job will be replicated as many times as there are elements in the matrix
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 45

    # Python version
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          python -m pip install .
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Install development tools for Contiki-NG
        run: |
          apt-get -qq update && \
          apt-get -qq -y --no-install-recommends install \
            ca-certificates > /dev/null && \
            apt-get -qq -y --no-install-recommends install \
          build-essential \
          gdb \
          git \
          iputils-ping \
          less \
          lib32z1 \
          libcanberra-gtk-module \
          libcoap2-bin \
          libpng-dev \
          libxtst6 \
          mosquitto \
          mosquitto-clients \
          mtr-tiny \
          net-tools \
          python3-dev \
          python3-pip \
          python3-setuptools \
          python3-serial \
          rlwrap \
          sudo \
          screen \
          srecord \
          udev \
          unzip \
          libusb-1.0-0 \
          valgrind \
          wget \
          smitools \
          snmp \
          snmp-mibs-downloader \
          > /dev/null && \
            wget -nv https://github.com/dongjinleekr/graalvm-ce-deb/releases/download/22.2.0-0/graalvm-ce-java17_amd64_22.2.0-0.deb && \
            dpkg --unpack graalvm-ce-java17_amd64_22.2.0-0.deb && \
            apt-get -qq -y --no-install-recommends install \
          ca-certificates-java \
          java-common \
          libnss3 \
          libnspr4 \
          libsqlite3-0 \
          > /dev/null && \
            apt-get -qq -y --no-install-recommends install \
          ant \
          > /dev/null && \
            rm graalvm-ce-java17_amd64_22.2.0-0.deb && \
            apt-get -qq clean
      - name: Test with pytest
        run: |
          pytest
