# Main SDWSN Controller workflow
name: CI
run-name: ${{ github.actor }} is doing CI

# Run the workflow on:
#   * Any PR against master, develop or candidate release branch
#   * Any push (or merge) on master and develop
on:
  push:
    branches: [master, develop, fix-flake8-error, new-tests]
  pull_request:
    branches: [master, develop, release-*]

# We use a single job with a matrix with elements corresponding to our tests
# The job will be replicated as many times as there are elements in the matrix
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 45

    # Python version
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - name: Print workspace
        run: |
          echo $GITHUB_WORKSPACE
      - name: Install development tools for Contiki-NG
        run: |
          sudo apt-get update && \
          sudo apt-get -qq -y --no-install-recommends install ca-certificates > /dev/null && \
          sudo apt-get -qq -y --no-install-recommends install \
            build-essential \
          gdb \
          git \
          iputils-ping \
          less \
          lib32z1 \
          libcanberra-gtk-module \
          libcoap2-bin \
          libpng-dev \
          libxtst6 \
          mosquitto \
          mosquitto-clients \
          mtr-tiny \
          net-tools \
          python3-dev \
          python3-pip \
          python3-setuptools \
          python3-serial \
          rlwrap \
          sudo \
          screen \
          srecord \
          udev \
          unzip \
          libusb-1.0-0 \
          valgrind \
          wget \
          smitools \
          snmp \
          snmp-mibs-downloader \
          openjdk-17-jdk \
            ca-certificates-java \
            java-common \
            libnss3 \
            libnspr4 \
            libsqlite3-0 \
            > /dev/null && \
          sudo apt-get -qq -y --no-install-recommends install \
            ant \
            > /dev/null && \
          sudo apt-get -qq clean
      - uses: actions/checkout@v3
        with:
          repository: "fdojurado/contiki-ng"
          path: contiki-ng
          token: ${{ secrets.DATA_PLANE }}
          ref: "develop"
          fetch-depth: 2
          submodules: "recursive"
          persist-credentials: false
          lfs: true
      - name: Where am I
        run: |
          pwd
          ls
      - uses: actions/checkout@v3
        with:
          ref: "new-tests"
          fetch-depth: 2
          submodules: "recursive"
          persist-credentials: false
          lfs: true
      - name: Where am I 2
        run: |
          pwd
          ls
          cd tests
          ls
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          python -m pip install .
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest
